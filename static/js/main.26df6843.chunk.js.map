{"version":3,"sources":["index.js"],"names":["Cell","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","onClick","text","result","ReactDOM","render","_React$useState","React","useState","_React$useState2","Object","D_demos_react_demo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","finished","setFinished","_React$useState3","_React$useState4","cells","setCells","_React$useState5","_React$useState6","n","setN","onClickCell","row","col","copy","JSON","parse","stringify","i","console","log","tell","map","items","item","document","getElementById"],"mappings":"iMAIMA,SAAO,SAASC,GAClB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAASL,EAAMK,SACxCL,EAAMM,QAIVC,EAAS,KAsFbC,IAASC,OACLR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAtFW,WAAU,IAAAO,EACOC,IAAMC,UAAS,GADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAClBM,EADkBH,EAAA,GACRI,EADQJ,EAAA,GAAAK,EAECP,IAAMC,SAAS,CACrC,CAAC,KAAM,KAAM,MACb,CAAC,KAAM,KAAM,MACb,CAAC,KAAM,KAAM,QALQO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAElBE,EAFkBD,EAAA,GAEXE,EAFWF,EAAA,GAAAG,EAOPX,IAAMC,SAAS,GAPRW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAOlBE,EAPkBD,EAAA,GAOfE,EAPeF,EAAA,GAuDnBG,EAAc,SAACC,EAAKC,GAGtB,IAAMC,EAAOC,KAAKC,MAAMD,KAAKE,UAAUZ,IAEpCS,EAAKF,GAAKC,KACbH,EAAKD,EAAI,GACTK,EAAKF,GAAKC,GAAOJ,EAAI,IAAM,EAAI,IAAM,IACrCH,EAASQ,GAtDA,SAACT,GAGV,IAAK,IAAIa,EAAI,EAAGA,EAAI,EAAGA,IACvB,GACoB,OAAhBb,EAAMa,GAAG,IACTb,EAAMa,GAAG,KAAOb,EAAMa,GAAG,IACzBb,EAAMa,GAAG,KAAOb,EAAMa,GAAG,GAC1B,CACGC,QAAQC,IAAIf,EAAMa,GAAG,GAAK,gBAC1B1B,EAASa,EAAMa,GAAG,GACpBhB,GAAY,GACZ,MAGR,IAAK,IAAIgB,EAAI,EAAGA,EAAI,EAAGA,IACnB,GACoB,OAAhBb,EAAM,GAAGa,IACTb,EAAM,GAAGa,KAAOb,EAAM,GAAGa,IACzBb,EAAM,GAAGa,KAAOb,EAAM,GAAGa,GAC1B,CACGC,QAAQC,IAAIf,EAAM,GAAGa,GAAK,gBAC1B1B,EAASa,EAAM,GAAGa,GACpBhB,GAAY,GACZ,MAIY,OAAhBG,EAAM,GAAG,IACTA,EAAM,GAAG,KAAOA,EAAM,GAAG,IACzBA,EAAM,GAAG,KAAOA,EAAM,GAAG,KAEzBc,QAAQC,IAAIf,EAAM,GAAG,GAAK,gBAC1Bb,EAASa,EAAM,GAAG,GACdH,GAAY,IAGA,OAAhBG,EAAM,GAAG,IACTA,EAAM,GAAG,KAAOA,EAAM,GAAG,IACzBA,EAAM,GAAG,KAAOA,EAAM,GAAG,KAEzBc,QAAQC,IAAIf,EAAM,GAAG,GAAK,gBAC1Bb,EAASa,EAAM,GAAG,GACdH,GAAY,IAahBmB,CAAKP,KAGT,OAAO5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,SACMoB,EADN,UAGCJ,EAAMiB,IAAK,SAACC,EAAOX,GAAR,OAAgB1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACtCkC,EAAMD,IAAK,SAACE,EAAMX,GAAP,OACZ3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACJ,EAAD,CAAMO,KAAMiC,EAAMlC,QAAU,kBAAKqB,EAAYC,EAAKC,YAGrDrB,GAAUN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,qBAA4BG,GACtCS,GAAYf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,8BAOjB,OACGoC,SAASC,eAAe","file":"static/js/main.26df6843.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css'\r\n\r\nconst Cell = function(props){\r\n    return <div className=\"cell\" onClick={props.onClick}>\r\n       {props.text}\r\n    </div>\r\n}\r\n\r\nlet result = null\r\n\r\nconst Chessboard = function(){\r\n    const [finished, setFinished] = React.useState(false)\r\n    const [cells, setCells] = React.useState([\r\n        [null, null, null],\r\n        [null, null, null],\r\n        [null, null, null],\r\n    ])\r\n    const [n, setN] = React.useState(0)\r\n// tell函数的形参为cells 在下面调用时实参为copy\r\n    const tell = (cells)=>{\r\n        // console.log(tell);\r\n        // 判断胜利4种方式 横 竖 左斜 右斜\r\n        for (let i = 0; i < 3; i++){\r\n        if (\r\n            cells[i][0] !== null &&\r\n            cells[i][0] === cells[i][1] &&\r\n            cells[i][1] === cells[i][2]\r\n          ){\r\n              console.log(cells[i][0] + '赢了');\r\n              result = cells[i][0]\r\n            setFinished(true)\r\n            break\r\n          } \r\n    }\r\n    for (let i = 0; i < 3; i++){\r\n        if (\r\n            cells[0][i] !== null &&\r\n            cells[0][i] === cells[1][i] &&\r\n            cells[1][i] === cells[2][i]\r\n          ){\r\n              console.log(cells[0][i] + '赢了');\r\n              result = cells[0][i]\r\n            setFinished(true)\r\n            break\r\n          } \r\n    }\r\n    if (\r\n        cells[0][0] !== null &&\r\n        cells[0][0] === cells[1][1] &&\r\n        cells[1][1] === cells[2][2]\r\n      ) {\r\n        console.log(cells[0][0] + '赢了');\r\n        result = cells[0][0]\r\n            setFinished(true)\r\n      }\r\n      if (\r\n        cells[0][2] !== null &&\r\n        cells[0][2] === cells[1][1] &&\r\n        cells[1][1] === cells[2][0]\r\n      ) {\r\n        console.log(cells[0][2] + '赢了');\r\n        result = cells[0][2]\r\n            setFinished(true)\r\n      }\r\n}\r\n    const onClickCell = (row, col)=>{\r\n        // console.log(row + '行',col + '列')\r\n        // 深拷贝\r\n        const copy = JSON.parse(JSON.stringify(cells))\r\n        // 一格只能点一次\r\n        if(copy[row][col]) return\r\n        setN(n + 1)\r\n        copy[row][col] = n % 2 === 0 ? 'x' : 'o'\r\n        setCells(copy)\r\n        // 用新的判断谁赢\r\n        tell(copy)\r\n    }\r\n\r\n    return <div className='wrapper'>\r\n        <div className='round'>\r\n            第{n}手\r\n        </div>\r\n        {cells.map( (items, row) => <div className='row'>\r\n            {items.map( (item, col) => \r\n            <div className='col'>\r\n                <Cell text={item} onClick={ ()=> onClickCell(row, col)}/>\r\n            </div>)}\r\n        </div>)}\r\n            {result && <div className='finish'>胜方为{result}</div>}\r\n            {finished && <div className='gameOver'>游戏结束</div>}\r\n    </div>\r\n}\r\n// finished为true时显示游戏结束\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <Chessboard />\r\n    </div>,document.getElementById('root')\r\n)"],"sourceRoot":""}